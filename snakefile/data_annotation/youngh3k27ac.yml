ANNOTATION_DIC=os.getenv('ANNOTATION_DIC')
YOUNGH3K27AC_DATA_DIR = os.getenv('YOUNGH3K27AC_DATA_DIR')
YOUNGH3K27AC_URL = os.getenv('YOUNGH3K27AC_URL')
THREADS = int(os.getenv('THREADS'))

rule join_bed_annotation:
    input:
        bed_sortedk4=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id_sortedk4.bed"),
        annotation_dic=ANNOTATION_DIC
    output:
        bed=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac.bed"),
    shell:
        """join -1 4 -2 3 {input.bed_sortedk4} {input.annotation_dic} |awk 'BEGIN{{OFS="\t"}}{{print $2,$3,$4,$7"."$1"."$6}}' >{output.bed}"""

rule sort_id_bed:
    input:
        bed=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id.bed"),
    output:
        bed_sortedk4=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id_sortedk4.bed"),
    threads: THREADS
    shell:
        """sort --parallel {THREADS} -k4,4 {input.bed} -o {output.bed_sortedk4}"""

#rule id_bed_h19toGRCh38:
#    input:
#        bed=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id_hg19.bed"),
#        hg19ToHg38_chain="/cobelix/gonzalez/Software/repositories/tagoos/data/hg19ToHg38.over.chain.gz"
#    output:
#        bed=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id.bed"),
#    shell:
#        """/cobelix/gonzalez/Software/miniconda3/envs/tagoos_py27/bin/python /cobelix/gonzalez/Software/miniconda3/envs/tagoos_py27/bin/CrossMap.py bed {input.hg19ToHg38_chain} {input.bed} {output.bed}"""

rule bed_id:
    input:
        bed_unzipped=os.path.join(YOUNGH3K27AC_DATA_DIR, "bed.unzipped"),
        annotation_dic=ANNOTATION_DIC,
    output:
        bed=os.path.join(YOUNGH3K27AC_DATA_DIR, "youngh3k27ac_id.bed"),
    params:
        bed_dir=os.path.join(YOUNGH3K27AC_DATA_DIR, "bed")
    shell:
        """cat {input.annotation_dic} |cut -f3,3 |while read LABEL; do FN=$LABEL; awk -v LABEL="$LABEL" 'BEGIN{{OFS="\t"}}NR>1{{print $1,$2,$3,LABEL}}' {params.bed_dir}/$FN.bed; done |grep -v track >{output.bed}"""

rule unzip:
    input:
        zip=os.path.join(YOUNGH3K27AC_DATA_DIR, "mmc8.zip"),
    params:
        bed_dir=os.path.join(YOUNGH3K27AC_DATA_DIR, "bed")
    threads: THREADS
    output:
        bed_unzipped=os.path.join(YOUNGH3K27AC_DATA_DIR, "bed.unzipped"),
    shell:
        """unzip {input.zip} -d {params.bed_dir}; touch {output.bed_unzipped}"""

rule download_zip:
    params: data_dir=YOUNGH3K27AC_DATA_DIR
    output:
        zip=os.path.join(YOUNGH3K27AC_DATA_DIR, "mmc8.zip"),
    shell:
        """wget {YOUNGH3K27AC_URL} --directory-prefix={params.data_dir};"""

