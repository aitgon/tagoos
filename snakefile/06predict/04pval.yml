ANNOTATION_BED = os.getenv('ANNOTATION_BED')
HOME = os.getenv('HOME')
OUTDIR = os.getenv('OUTDIR')
RANDOM_BED = os.getenv('RANDOM_BED')
TAGOOS = os.getenv('TAGOOS')
THREADS = int(os.getenv('THREADS'))
VARIABLE_TXT = os.getenv('VARIABLE_TXT')
MODEL_PKL = os.getenv('MODEL_PKL')
PREDICTION_BED = os.getenv('PREDICTION_BED')
REGION = os.getenv('REGION')

rule p02_pval:
    input:
        random=os.path.join(OUTDIR, "random/predicted.bed"),
        prediction=os.path.join(OUTDIR, "prediction_annotation.bed"),
    output:
        ecdf_rda=os.path.join(OUTDIR, "random/ecdf.rda"),
        prediction_pval=os.path.join(OUTDIR, "prediction_pval.bed"),
    shell:
        """Rscript -e 'library(data.table);dt=fread("{input.random}");F10=ecdf(dt$V4);save(F10,file="{output.ecdf_rda}");dt2=fread("{input.prediction}");dt2$V6=1-F10(dt2$V4); setcolorder(dt2, c("V1", "V2", "V3", "V4", "V6", "V5")); fwrite(dt2,file="{output.prediction_pval}",row.names=FALSE,quote=FALSE,col.names=F,sep="\\t");'"""

rule p01_random:
    """This rule intersects the bed file of the random genomic positions with the region bed file

    Parameters
    ----------
    region : Bed file path
        bed file path of random genomic positions
    random : Bed file path.
        bed file path of random genomic positions
    """
    input:
        random=RANDOM_BED,
        prediction=PREDICTION_BED,
    output:
        bed=os.path.join(OUTDIR, "random/predicted.bed"),
    shell:
        """intersectBed -sorted -a {input.random} -b  {input.prediction} -wb |cut -f1-3,7 |sort -u -k1,1 -k2,2n -k3,3n -k4,4n >{output.bed}"""


