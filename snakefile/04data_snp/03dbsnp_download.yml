CHROM=os.getenv('CHROM').split()
DBSNP_DIR=os.getenv('DBSNP_DIR')
REFGENE = os.getenv('REFGENE')
URL_DBSNP = os.getenv('URL_DBSNP')
HOME = os.getenv('HOME')
THREADS = int(os.getenv('THREADS'))

#rule cat_rsid2gene:
#    input:
#        rsid2gene_chr = expand(os.path.join(DBSNP_DIR, "raw_bed/{chr}/rsid2gene_chr{chr}.tsv"), chr=CHROM),
#    output:
#        rsid2gene = os.path.join(DBSNP_DIR, "rsid2gene.tsv"),
#    threads: THREADS
#    shell:
#        """sort -u --parallel {threads} {input.rsid2gene_chr} -o {output.rsid2gene}"""

#rule rsid2gene:
#    input:
#        bed=os.path.join(DBSNP_DIR, "raw_bed/{chr}/chr{chr}.sorted.bed"),
#        refgene = REFGENE,
#    output:
#        rsid2gene_tsv=os.path.join(DBSNP_DIR, "raw_bed/{chr}/rsid2gene_chr{chr}.tsv"),
#    shell:
#        """bedtools closest -a {input.bed} -b {input.refgene} -d |cut -f4,8,9 >{output.rsid2gene_tsv}"""

rule input:
    input:
        rsid2gene_chr = expand(os.path.join(DBSNP_DIR, "raw_bed/{chr}/chr{chr}.sorted.bed"), chr=CHROM),

rule sort_bed:
    input:
        bed=os.path.join(DBSNP_DIR, "raw_bed/{chr}/chr{chr}.bed")
    output:
        bed=os.path.join(DBSNP_DIR, "raw_bed/{chr}/chr{chr}.sorted.bed")
    threads: THREADS
    shell:
        """LC_ALL=C sort -k1,1 -k2,2n --parallel {threads} {input.bed} -o {output.bed}"""

rule gunzip_bed:
    input:
        bed_gz=os.path.join(DBSNP_DIR, "raw/bed_chr{chr}.bed.gz")
    output:
        bed=os.path.join(DBSNP_DIR, "raw_bed/{chr}/chr{chr}.bed")
    shell:
        """gunzip {input.bed_gz} -c |cut -f1,2,3,4 |awk -F"\t" '$1 ~ /^chr[XY0-9]+$/ && $2 ~ /^[[:digit:]]+$/ && $3 ~ /^[[:digit:]]+$/' > {output.bed}"""

rule download_dbsnp:
    output:
        bed_gz=os.path.join(DBSNP_DIR, "raw/bed_chr{chr}.bed.gz")
    params:
        url=URL_DBSNP
    shell:
        """wget {params.url} -O {output.bed_gz}"""

