GENOMIC_REGION_BED = os.getenv('GENOMIC_REGION_BED')
GRASP_DATA_DIR=os.getenv('GRASP_DATA_DIR')
HOME = os.getenv('HOME')
REGION = os.getenv('REGION')
THREADS = int(os.getenv('THREADS'))

rule all:
    input:
        rsid = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.rsid"),

rule grasp108:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        rsid = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.rsid"),
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.bed"),
    params: pvaluemax = 0.00000005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", delim_whitespace=True, header=None, dtype={{5: numpy.float64}}); df=df.ix[df[4]<={params.pvaluemax}]; df.to_csv("{output.bed}", sep="\t", header=False, index=False); df[3].to_csv("{output.rsid}", sep="\t", header=False, index=False)'"""

rule filter_region:
    input:
        bed=os.path.join(GRASP_DATA_DIR, "proc/grasp.bed"),
        genomic_region_bed = GENOMIC_REGION_BED,
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    shell:
        """bedtools intersect -sorted -a {input.bed} -b {input.genomic_region_bed} | sort -u -k1,1 -k2,2n >{output.bed}"""

