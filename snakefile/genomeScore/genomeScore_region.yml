GENOMIC_REGION_BED = os.getenv('GENOMIC_REGION_BED')
OUTDIR = os.getenv('OUTDIR')
HOME = os.getenv('HOME')
TAGOOS_APPLI = os.getenv('TAGOOS_APPLI')
THREADS = int(os.getenv('THREADS'))

GWINDOW_1NT_DIR=os.getenv('GWINDOW_1NT_DIR')
GENOME_WINDOW_BED=os.getenv('GENOME_WINDOW_BED')
GENOME_WINDOW_IDS=os.getenv('GENOME_WINDOW_IDS').split()

rule all:
    input:
        expand(os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region.bed"), gwindow=GENOME_WINDOW_IDS),

#rule collapse:
#    input:
#        script=os.path.join(TAGOOS_APPLI, "script/groupby123cols_collapse4col.py"),
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation.bed"),
#    output:
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed.bed"),
#    shell:
#        """python3 {input.script} {input.bed} {output.bed}"""

#rule sort_annotated:
#    input:
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation_nonsorted.bed"),
#    output:
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation.bed"),
#    threads: THREADS
#    shell:
#        """sort --parallel {threads} -k1,1 -k2,2n -k3,3n -k4,4 -u {input.bed} -o {output.bed}"""

#rule annotate:
#    input:
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region.bed"),
#        annotation="/cobelix/gonzalez/data/2015_svmgwas/repositories/tagoos-appli/170712/out/GRASP108intronic/1kg1000000intronic_mergedannot_index3_data/annotation/mergedannot.bed",
#    output:
#        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation_nonsorted.bed"),
#    shell:
#        """intersectBed -sorted -a {input.bed} -b  {input.annotation} -wb | awk '{{print $1"\t"$2"\t"$3"\t"$7}}' |uniq >{output.bed}"""

rule sort_region:
    input:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_nonsorted.bed")
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region.bed")
    threads: THREADS
    shell:
        """sort -k1,1 -k2,2n -k3,3n -u --parallel {threads} {input.bed} -o {output.bed}; """

rule intersect_region:
    input:
        bed=GENOMIC_REGION_BED,
        bed2=os.path.join(GWINDOW_1NT_DIR, "gwindow/{gwindow}/gwindow_1nt.bed")
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_nonsorted.bed")
    shell:
        """intersectBed -sorted -a {input.bed} -b {input.bed2} | awk '{{print $1"\t"$2"\t"$3}}' >{output.bed}"""

