OUTDIR = os.getenv('OUTDIR')
HOME = os.getenv('HOME')
TAGOOS = os.getenv('TAGOOS')
REGION = os.getenv('REGION')
THREADS = int(os.getenv('THREADS'))
VARIABLE_TXT = os.getenv('VARIABLE_TXT')
MODEL_PKL = os.getenv('MODEL_PKL')
GENOME_WINDOW_IDS=os.getenv('GENOME_WINDOW_IDS').split()

rule gsa99_all:
    input:
        os.path.join(OUTDIR, "percentile.bg"),
        os.path.join(OUTDIR, "annotation.bed"),

rule gsa11_merge_annotation_bed:
    input:
        bed = expand(os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed2.bed"), gwindow=GENOME_WINDOW_IDS),
    output:
        bed = os.path.join(OUTDIR, "annotation.bed")
    threads: THREADS
    params: region=REGION
    shell:
        """sort --parallel {threads} -k1,1 -k2,2n {input.bed} >> {output.bed}"""

rule gsa10_sort:
    input:
        bed = os.path.join(OUTDIR, "percentile_nonsorted.bed"),
    output:
        bg = os.path.join(OUTDIR, "percentile.bg"),
    params: region=REGION
    threads: THREADS
    shell:
        """echo 'track type=bedGraph name=tagoos_{params.region}' >{output.bg};
            sort -k1,1 -k2,2n --parallel {threads} {input.bed} >> {output.bg};"""

rule gsa09_bed:
    input:
        tsv = os.path.join(OUTDIR, "percentile.tsv"),
    output:
        bed = os.path.join(OUTDIR, "percentile_nonsorted.bed"),
    shell:
        """awk -F'[-: \t]' 'BEGIN{{OFS="\t"}}{{print $1,$2-1,$3,$4}}' {input.tsv} >{output.bed};"""

rule gsa08_percentile:
    input:
        script=os.path.join(TAGOOS, "script/percentile.py"),
        score_tsv=os.path.join(OUTDIR, "score.tsv"),
    output:
        tsv = os.path.join(OUTDIR, "percentile.tsv"),
    shell:
        """{HOME}/Software/miniconda3/envs/tagoos/bin/python {input.script} {input.score_tsv} {output.tsv};"""

rule gsa07_cat_score:
    input:
        score_tsv=expand(os.path.join(OUTDIR, "gwindow/{gwindow}/score.tsv"), gwindow=GENOME_WINDOW_IDS),
    output:
        score_tsv=os.path.join(OUTDIR, "score.tsv"),
    threads: THREADS
    shell:
        """sort -k2,2nr -k1,1 --parallel {threads} {input.score_tsv} -o {output.score_tsv}"""

rule gsa06_score:
    input:
        script=os.path.join(TAGOOS, "script/score2.py"),
        libsvm=os.path.join(OUTDIR, "gwindow/{gwindow}/collapsed2.libsvm"),
        instance=os.path.join(OUTDIR, "gwindow/{gwindow}/instance.txt"),
        model_pkl=MODEL_PKL,
    output:
        score_tsv=os.path.join(OUTDIR, "gwindow/{gwindow}/score.tsv"),
    shell:
        """{HOME}/Software/miniconda3/envs/tagoos/bin/python {input.script} {input.libsvm} {input.instance} {input.model_pkl} {output.score_tsv}"""

rule gsa05_tolibsvm:
    input:
        script=os.path.join(TAGOOS, "script/collapse2libsvm.py"),
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed2.bed"),
        variable_txt=VARIABLE_TXT,
    output:
        instance=os.path.join(OUTDIR, "gwindow/{gwindow}/instance.txt"),
        libsvm=os.path.join(OUTDIR, "gwindow/{gwindow}/collapsed2.libsvm"),
    shell:
        """python3 {input.script} {input.bed} {input.variable_txt} {output.instance} {output.libsvm}"""

rule tmp:
    input:
        expand(os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed2.bed"), gwindow=GENOME_WINDOW_IDS),

rule gsa04_collapse_smallPeaksToLargePeaks:
    input:
        script=os.path.join(TAGOOS, "script/collapseSmallToLargePeaks_byCol4.py"),
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed.bed"),
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed2.bed"),
    shell:
        """python3 {input.script} {input.bed} {output.bed}"""

rule gsa03_collapse_annotations:
    input:
        script=os.path.join(TAGOOS, "script/groupby123cols_collapse4col.py"),
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation.bed"),
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_annotation_collapsed.bed"),
    shell:
        """python3 {input.script} {input.bed} {output.bed}"""

rule gsa02_sort_annotated:
    input:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation_nonsorted.bed"),
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation.bed"),
    threads: THREADS
    shell:
        """sort --parallel {threads} -k1,1 -k2,2n -k3,3n -k4,4 -u {input.bed} -o {output.bed}"""

rule gsa01_annotate:
    input:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region.bed"),
        annotation="/cobelix/gonzalez/data/2015_svmgwas/repositories/tagoos-appli/170712/out/GRASP108intronic/1kg1000000intronic_mergedannot_index3_data/annotation/mergedannot.bed",
    output:
        bed=os.path.join(OUTDIR, "gwindow/{gwindow}/gwindow_1nt_region_annotation_nonsorted.bed"),
    shell:
        """intersectBed -sorted -a {input.bed} -b  {input.annotation} -wb | awk '{{print $1"\t"$2"\t"$3"\t"$7}}' |uniq >{output.bed};
            intersectBed -sorted -a {input.bed} -b  {input.annotation} -v | awk '{{print $1"\t"$2"\t"$3"\t."}}' |uniq >>{output.bed}"""


