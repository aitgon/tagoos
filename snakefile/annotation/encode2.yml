ENCODE2_URL=os.getenv('ENCODE2_URL')
ENCODE2_DATA_DIR = os.getenv('ENCODE2_DATA_DIR')
HOME = os.getenv('HOME')
SCRIPTDIR = os.path.join(os.getenv('TAGOOS'), "script")
THREADS = int(os.getenv('THREADS'))

rule sort_bed:
    input:
        encode2_1col_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_nonsorted.bed"),
    output:
        encode2_1col_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col.bed"),
    threads: THREADS
    shell:
        """sort -k1,1 -k2,2n --parallel {threads} {input.encode2_1col_bed} -o {output.encode2_1col_bed}"""

rule join_bed_annotation:
    input:
        encode2_1col_file_sortedk4_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_file_sortedk4.bed"),
        experiment2annotation2file_sortedk5_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation2file_sortedk5.tsv"),
    output:
        encode2_1col_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_nonsorted.bed"),
    shell:
        """join -1 4 -2 5 {input.encode2_1col_file_sortedk4_bed} {input.experiment2annotation2file_sortedk5_tsv} -o 1.1,1.2,1.3,2.3,2.2 |awk 'BEGIN{{OFS="\t";FS=" "}}{{print $1,$2,$3,$5"."$4".ENCODE2"}}' >{output.encode2_1col_bed}"""

rule sort_k5_experiment2annotation:
    input:
        experiment2annotation2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation2file.tsv"),
    output:
        experiment2annotation2file_sortedk5_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation2file_sortedk5.tsv"),
    shell:
        """LC_ALL=C sort -k5,5 {input.experiment2annotation2file_tsv} -o {output.experiment2annotation2file_sortedk5_tsv};"""

rule sort_k4_encode2_1col:
    input:
        encode2_1col_file_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_file.bed"),
    output:
        encode2_1col_file_sortedk4_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_file_sortedk4.bed"),
    threads: THREADS
    shell:
        """LC_ALL=C sort -k4,4 --parallel {threads} {input.encode2_1col_file_bed} -o {output.encode2_1col_file_sortedk4_bed};"""

rule cat_bed_gz:
    input:
        bed_gz_dir_downloaded=os.path.join(ENCODE2_DATA_DIR, "bed_gz_dir_downloaded")
    output:
        encode2_1col_file_bed=os.path.join(ENCODE2_DATA_DIR, "encode2_1col_file.bed"),
    params:
        bed_gz_dir=os.path.join(ENCODE2_DATA_DIR, "bed_gz")
    shell:
        """ls {params.bed_gz_dir} |while read F; do export FN=$F; gunzip -c {params.bed_gz_dir}/$FN |awk -v ID="${{FN%.bed.gz}}" 'BEGIN{{OFS="\t"}}{{print $1,$2,$3,ID}}'; done >{output.encode2_1col_file_bed};"""

rule download_bed_gz:
    input:
        bed_gz_url_list=os.path.join(ENCODE2_DATA_DIR, "file_url_list.txt"),
    output:
        bed_gz_dir_downloaded=os.path.join(ENCODE2_DATA_DIR, "bed_gz_dir_downloaded")
    params:
        bed_gz_dir=os.path.join(ENCODE2_DATA_DIR, "bed_gz")
    threads: THREADS*2
    shell:
        """rm -rf {params.bed_gz_dir} && mkdir -p {params.bed_gz_dir};
        cat {input.bed_gz_url_list} | xargs -n1 -P{threads} wget --directory-prefix={params.bed_gz_dir};
        touch {output.bed_gz_dir_downloaded};"""

rule merged_experiment_files:
    input:
        experiment2annotation_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation.tsv"),
        experiment2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2file_sorted.tsv"),
    output:
        experiment2annotation2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation2file.tsv"),
        bed_gz_url_list=os.path.join(ENCODE2_DATA_DIR, "file_url_list.txt"),
    shell:
        """join -1 1 -2 1 {input.experiment2annotation_tsv} {input.experiment2file_tsv} >{output.experiment2annotation2file_tsv};
            cat {output.experiment2annotation2file_tsv} |cut -d " " -f4 |while read L; do echo "https://www.encodeproject.org$L"; done >{output.bed_gz_url_list}"""

rule sort_experiment2file:
    input:
        experiment2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2file.tsv")
    output:
        experiment2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2file_sorted.tsv")
    shell:
        """sort -k1,1 {input.experiment2file_tsv} -o {output.experiment2file_tsv}"""

rule process_experiment_json:
    input:
        experiment_json_dir_downloaded=os.path.join(ENCODE2_DATA_DIR, "experiment_json_dir_downloaded"),
        script = os.path.join(SCRIPTDIR, "annotation/process_encode2_experiment_json.py"),
    output:
        experiment2file_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2file.tsv")
    params:
        experiment_json_dir=os.path.join(ENCODE2_DATA_DIR, "experiment_json")
    shell:
        """{HOME}/Software/miniconda3/envs/tagoos/bin/python {input.script} {params.experiment_json_dir} {output.experiment2file_tsv};"""

rule download_experiment_json:
    input:
        experiment_url_list=os.path.join(ENCODE2_DATA_DIR, "experiment_url_list.tsv"),
        script = os.path.join(SCRIPTDIR, "annotation/process_encode2_experiment_json.py"),
    output:
        experiment_json_dir_downloaded=os.path.join(ENCODE2_DATA_DIR, "experiment_json_dir_downloaded"),
    params:
        experiment_json_dir=os.path.join(ENCODE2_DATA_DIR, "experiment_json")
    threads: THREADS*2
    shell:
        """rm -rf  {params.experiment_json_dir} && mkdir -p {params.experiment_json_dir}
            cat {input.experiment_url_list} | xargs -n1 -P{threads} wget --directory-prefix={params.experiment_json_dir};
            touch {output.experiment_json_dir_downloaded}"""

rule download_experiment_json_list:
    input:
        experiment_list=os.path.join(ENCODE2_DATA_DIR, "experiment.tsv")
    output:
        experiment_url_list=os.path.join(ENCODE2_DATA_DIR, "experiment_url_list.tsv")
    shell:
        """cat {input.experiment_list} |cut -f2,2 | grep -v Accession |while read F; do echo "https://www.encodeproject.org/search/?type=file&dataset=/experiments/$F/&format=json&frame=object&limit=all"; done > {output.experiment_url_list}"""

rule download_experiment_list:
    output:
        experiment_list=os.path.join(ENCODE2_DATA_DIR, "experiment.tsv"),
        experiment_nontreated_list=os.path.join(ENCODE2_DATA_DIR, "experiment_nontreated.tsv"),
        experiment2annotation_tsv=os.path.join(ENCODE2_DATA_DIR, "experiment2annotation.tsv"),
    params:
        url=ENCODE2_URL
    shell:
        """wget '{params.url}' -O {output.experiment_list}; 
            awk 'BEGIN{{FS="\t"}}$20==""{{print $0}}' {output.experiment_list} >{output.experiment_nontreated_list};
            cut -f 2,3,4,5,8 {output.experiment_nontreated_list} |awk 'BEGIN{{FS="\t";OFS="\t";}}{{if ($2=="ChIP-seq") print $1,$4,$5; if ($2!="ChIP-seq") print $1,$2,$5;}}'| tr -d " " |tr -d "," |sort -k1,1 >{output.experiment2annotation_tsv}"""

