GRASP_DATA_DIR=os.getenv('GRASP_DATA_DIR')
HOME = os.getenv('HOME')
THREADS = int(os.getenv('THREADS'))

rule tobed:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/grasp.tsv")
    output:
        bed=os.path.join(GRASP_DATA_DIR, "proc/grasp.bed")
    shell:
        """awk 'BEGIN{{OFS="\t"}}{{print "chr"$2,$3-1,$3,$1,$5}}' {input.tsv} |sort -u -k1,1 -k2,2n >{output.bed}"""

# keep best p-value
rule proc6:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_5.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/grasp.tsv")
    shell:
        """{HOME}/Software/miniconda3/envs/tagoos/bin/python -c 'import pandas; import numpy; df=pandas.read_csv("{input.tsv}", sep="\t", encoding = "ISO-8859-1", header=None, dtype={{4:numpy.float64}}); df=df.ix[df[4]!=0]; df.sort_values(by=[4], ascending=True, inplace=True); df.drop_duplicates(subset=[0], keep="first", inplace=True); df.to_csv("{output.tsv}", sep="\t", header=None, index=False)'"""

# remove eQTLs
rule proc5:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_4.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_5.tsv")
    shell:
        """grep -v Gene_expression_ {input.tsv} > {output.tsv}"""

# remove pvalues prefixed with _
rule proc4:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_3.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_4.tsv")
    shell:
        """awk -F"\t"  '$4!~/_/ {{print}}' {input.tsv} > {output.tsv}"""

# Remove empty p-values
rule proc3:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_2.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_3.tsv")
    shell:
        """awk -F'\t' '$4!=""{{print}}' {input.tsv} |awk -F'\t' 'NF==11 {{print}}' >{output.tsv}"""

# Clean up special characters
rule proc2:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_1.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_2.tsv")
    shell:
        """sed "s/[ ]/_/g" {input.tsv} >{output.tsv}"""

# Filter Eur population
rule proc1:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2_1.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_1.tsv")
    shell:
        """awk -F"\t"  '$11=="European" {{print "rs"$0}}' {input.tsv} > {output.tsv}"""

rule filter_cols:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2_1.tsv")
    shell:
        """cut -f5,6,7,8,11,12,13,14,17,18,24 {input.tsv} >{output.tsv}"""

rule unzip:
    input:
        zip=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.zip")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.tsv")
    shell:
        """unzip -p {input.zip} GRASP2fullDataset >{output.tsv}"""

rule download:
    output:
        zip=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.zip")
    params:
        url="https://s3.amazonaws.com/NHLBI_Public/GRASP/GraspFullDataset2.zip"
    shell:
        """wget {params.url} -O {output.zip}"""

