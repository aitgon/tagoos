CHROM=os.getenv('CHROM').split()
OUTDIR=os.getenv('OUTDIR')
GENOME1K_PLINKBED_DIR=os.getenv('GENOME1K_PLINKBED_DIR')
ANNOT_LABEL=os.getenv('ANNOT_LABEL')
LD=os.getenv('LD')
LD_DIR=os.getenv('LD_DIR')
SNP_DIR = os.getenv('SNP_DIR')
HOME = os.getenv('HOME')
SCRIPTDIR = os.getenv('SCRIPTDIR')
THREADS = int(os.getenv('THREADS'))

#LD_SLUG=LD.replace(".", "")

rule all:
    input:
        plink_ld = expand(os.path.join(LD_DIR, "chrom/{chr}/chr{chr}.ld"), chr=CHROM),
        prune_in = expand(os.path.join(OUTDIR, "index3/{chr}/chr{chr}_index3.prune.in"), chr=CHROM),

rule sort_ldproc:
    input:
        plink_ld_nonsorted = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}_nonsorted.ld")
    output:
        plink_ld = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}.ld")
    threads: THREADS
    shell:
        """LC_ALL=C sort -u --parallel {threads}  {input.plink_ld_nonsorted} -o {output.plink_ld}"""

rule ldproc:
    input:
        plink_ld_raw = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}_raw.ld"),
    output:
        plink_ld_nonsorted = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}_nonsorted.ld")
    shell:
        """LC_ALL=C awk '{{print $3"\t"$6"\t"$7}}' {input.plink_ld_raw} > {output.plink_ld_nonsorted}"""

rule ld:
    input:
        plink_bed = os.path.join(GENOME1K_PLINKBED_DIR, "{chr}/chr{chr}_plink.bed"),
        chrom_rsid = os.path.join(GENOME1K_PLINKBED_DIR, "{chr}/chr{chr}.rsid"),
    params:
        plink_bed_prefix = os.path.join(GENOME1K_PLINKBED_DIR, "{chr}/chr{chr}_plink"),
        plink_ld_prefix = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}_raw"),
        ld = LD
    output:
        plink_ld_raw = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}_raw.ld"),
    threads: THREADS
    shell:
        """plink --threads {threads} --bfile {params.plink_bed_prefix} --ld-snp-list {input.chrom_rsid} --ld-window-kb 1000 --ld-window 1000000 --ld-window-r2 {params.ld} --r2 --out {params.plink_ld_prefix}"""

rule index3:
    input:
        plink_bed = os.path.join(GENOME1K_PLINKBED_DIR, "{chr}/chr{chr}_plink.bed"),
    params:
        plink_bed_prefix = os.path.join(GENOME1K_PLINKBED_DIR, "{chr}/chr{chr}_plink"),
        plink_index_prune_prefix = os.path.join(OUTDIR, "index3/{chr}/chr{chr}_index3"),
    output:
        prune_in = os.path.join(OUTDIR, "index3/{chr}/chr{chr}_index3.prune.in"),
    shell:
        """mkdir -p $(dirname {output.prune_in}); plink --bfile {params.plink_bed_prefix} --indep 5 1 100 --out {params.plink_index_prune_prefix}"""

