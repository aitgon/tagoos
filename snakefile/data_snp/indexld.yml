CHROM=os.getenv('CHROM').split()
GENOME1K_DIR = os.getenv('GENOME1K_DIR')
HOME = os.getenv('HOME')
INDEX_DIR = os.getenv('INDEX_DIR')
INDEX_LABEL = os.getenv('INDEX_LABEL')
LABEL = os.getenv('LABEL')
LD=os.getenv('LD')
REGION = os.getenv('REGION')
THREADS = int(os.getenv('THREADS'))

from os.path import basename

from os.path import dirname
LD_SLUG="ld" + LD.replace(".", "")

rule all:
    input:
        expand(os.path.join(INDEX_DIR, REGION, "chrom/{chr}/index_ld_sortedk2.tsv"), chr=CHROM),

rule sort_indexld_k2:
    input:
        indexld = os.path.join(INDEX_DIR, REGION, "chrom/{chr}/index_ld.tsv"),
    output:
        indexld_sortedk2 = os.path.join(INDEX_DIR, REGION, "chrom/{chr}/index_ld_sortedk2.tsv"),
    threads: THREADS
    shell:
        """LC_ALL=C sort -u --parallel {threads} {input.indexld} -o {output.indexld_sortedk2};
         LC_ALL=C sort --parallel {threads} -k2,2 {output.indexld_sortedk2} -o {output.indexld_sortedk2}"""

rule indexld:
    input:
        index_rsid_sorted = os.path.join(INDEX_DIR, REGION, "chrom/{chr}/chr{chr}_%s.prune_sorted.in"%INDEX_LABEL),
        plink_ld = os.path.join(GENOME1K_DIR, REGION, "%s/{chr}/chr{chr}.ld"%LD_SLUG),
    output:
        indexld = os.path.join(INDEX_DIR, REGION, "chrom/{chr}/index_ld.tsv"),
    shell:
        """LC_ALL=C join -1 1 -2 1 -o 2.1,2.2,2.3 {input.index_rsid_sorted} {input.plink_ld} >{output.indexld}"""

rule sort_index_rsid:
    input:
        index_rsid = os.path.join(GENOME1K_DIR, REGION, "%s/{chr}/chr{chr}_%s.prune.in"%(INDEX_LABEL,INDEX_LABEL) ),
    output:
        index_rsid_sorted = os.path.join(INDEX_DIR, REGION, "chrom/{chr}/chr{chr}_%s.prune_sorted.in"%INDEX_LABEL),  
    threads: THREADS
    shell:
        """LC_ALL=C sort --parallel {threads} -u {input.index_rsid} -o {output.index_rsid_sorted}"""

