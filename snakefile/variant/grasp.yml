GENOMIC_REGION_BED = os.getenv('GENOMIC_REGION_BED')
GRASP_DATA_DIR=os.getenv('GRASP_DATA_DIR')
HOME = os.getenv('HOME')
REGION = os.getenv('REGION')
THREADS = int(os.getenv('THREADS'))

rule all:
    input:
        grasp105 = os.path.join(GRASP_DATA_DIR, REGION, "grasp105.rsid"),
        grasp103pred = os.path.join(GRASP_DATA_DIR, REGION, "grasp103pred.rsid"),
        grasp104pred = os.path.join(GRASP_DATA_DIR, REGION, "grasp104pred.rsid"),
        grasp105pred = os.path.join(GRASP_DATA_DIR, REGION, "grasp105pred.rsid"),
        grasp106pred = os.path.join(GRASP_DATA_DIR, REGION, "grasp106pred.rsid"),
        grasp107pred = os.path.join(GRASP_DATA_DIR, REGION, "grasp107pred.rsid"),
        grasp108 = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.rsid"),
        grasp108bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.bed"),
        grasp108bed_idx = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.bed.idx"),

rule grasp103pred:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp103pred.rsid"),
    params:
        pvaluelow = 0.005,
        pvaluehigh = 0.05
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluelow}]; df=df.ix[df[5]<={params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp104pred:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp104pred.rsid"),
    params:
        pvaluelow = 0.0005,
        pvaluehigh = 0.005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluelow}]; df=df.ix[df[5]<={params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp105pred:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp105pred.rsid"),
    params:
        pvaluelow = 0.00005,
        pvaluehigh = 0.0005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluelow}]; df=df.ix[df[5]<={params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp106pred:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp106pred.rsid"),
    params:
        pvaluelow = 0.000005,
        pvaluehigh = 0.00005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluelow}]; df=df.ix[df[5]<={params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp107pred:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp107pred.rsid"),
    params:
        pvaluelow = 0.0000005,
        pvaluehigh = 0.000005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluelow}]; df=df.ix[df[5]<={params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp105neg:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp105.rsid"),
    params: pvaluehigh = 0.00005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]>{params.pvaluehigh}]; df[3].to_csv("{output.bed}", sep="\t", header=False, index=False)'"""

rule grasp108pos:
    input:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    output:
        rsid = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.rsid"),
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.bed"),
        bed_idx = os.path.join(GRASP_DATA_DIR, REGION, "grasp108.bed.idx"),
    params: pvaluelow = 0.00000005
    shell:
        """python -c 'import numpy; import pandas; df=pandas.read_csv("{input.bed}", sep="\t", header=None, dtype={{5: numpy.float64}}); df=df.ix[df[5]<={params.pvaluelow}]; df.to_csv("{output.bed}", sep="\t", header=False, index=False); df[3].to_csv("{output.rsid}", sep="\t", header=False, index=False)';
        {HOME}/Software/IGVTools/igvtools index {output.bed}"""

rule filter_region:
    input:
        bed=os.path.join(GRASP_DATA_DIR, "proc/grasp.bed"),
        genomic_region_bed = GENOMIC_REGION_BED,
    output:
        bed = os.path.join(GRASP_DATA_DIR, REGION, "grasp.bed"),
    shell:
        """bedtools intersect -sorted -a {input.bed} -b {input.genomic_region_bed} | sort -u -k1,1 -k2,2n >{output.bed}"""

rule tobed:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/grasp.tsv")
    output:
        bed=os.path.join(GRASP_DATA_DIR, "proc/grasp.bed")
    shell:
        """awk 'BEGIN{{OFS="\t"}}{{print "chr"$2,$3-1,$3,$1,$5,$4}}' {input.tsv} |sort -u -k1,1 -k2,2n >{output.bed}"""

# keep best p-value
rule proc5:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_4.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/grasp.tsv")
    shell:
        """python -c 'import pandas; import numpy; df=pandas.read_csv("{input.tsv}", sep="\t", encoding = "ISO-8859-1", header=None, dtype={{1:numpy.str, 3:numpy.float64}}); df.sort_values(by=[3], ascending=True, inplace=True); df=df.ix[df[3]!=0]; df.drop_duplicates(subset=[0], keep="first", inplace=True); df.to_csv("{output.tsv}", sep="\t", header=None, index=False)'"""

# remove pvalues prefixed with _
rule proc4:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_3.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_4.tsv")
    shell:
        """awk -F"\t"  '$4!~/_/ {{print}}' {input.tsv} > {output.tsv}"""

# Remove empty p-values
rule proc3:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_2.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_3.tsv")
    shell:
        """awk 'BEGIN {{FS="\t"}} $2!="" {{print}}' {input.tsv} |awk -F'\t' 'NF==4 {{print}}' >{output.tsv}"""

# Clean up special characters
rule proc2:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_1.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_2.tsv")
    shell:
        """sed "s/[ ]/_/g" {input.tsv} >{output.tsv}"""

# Filter Eur population
rule proc1:
    input:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.tsv")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "proc/GraspFullDataset2_1.tsv")
    shell:
        """awk -F"\t"  '$24=="European" {{print "rs"$5"\t"$6"\t"$7"\t"$11}}' {input.tsv} > {output.tsv}"""

rule unzip:
    input:
        zip=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.zip")
    output:
        tsv=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.tsv")
    shell:
        """unzip -p {input.zip} GRASP2fullDataset >{output.tsv}"""

rule download:
    output:
        zip=os.path.join(GRASP_DATA_DIR, "raw/GraspFullDataset2.zip")
    params:
        url="https://s3.amazonaws.com/NHLBI_Public/GRASP/GraspFullDataset2.zip"
    shell:
        """wget {params.url} -O {output.zip}"""

