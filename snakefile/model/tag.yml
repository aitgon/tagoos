ANNOT_LABEL = os.getenv('ANNOT_LABEL')
ANNOTATION_DIR=os.getenv('ANNOTATION_DIR')
INDEX_LABEL = os.getenv('INDEX_LABEL')
CHROM=sorted(os.getenv('CHROM').split())
GENOME1K_DIR = os.getenv('GENOME1K_DIR')
GENOME1K_PEAKBED_DIR = os.getenv('GENOME1K_PEAKBED_DIR')
HOME = os.getenv('HOME')
INDEX_DIR = os.getenv('INDEX_DIR')
LABEL = os.getenv('LABEL')
#LD=os.getenv('LD')
LD_DIR=os.getenv('LD_DIR')
PYTHONBIN = os.getenv('PYTHONBIN')
REGION = os.getenv('REGION')
THREADS = int(os.getenv('THREADS'))
TAG_DIR = os.getenv('TAG_DIR')
SCRIPT_DIR = os.path.join(os.getenv('TAGOOS'), "script")
TAG_RSID = os.getenv('TAG_RSID')

from os.path import basename

from os.path import dirname
#LD_SLUG="ld" + LD.replace(".", "")

rule all:
    input:
        pasted_instance_libsvm = expand(os.path.join(TAG_DIR, "chrom/{chr}/pasted_instance.libsvm"), chr=CHROM),

rule pasted_instance_libsvm:
    input: 
        libsvm = os.path.join(TAG_DIR, "chrom/{chr}/annotation.libsvm"),
        instance = os.path.join(TAG_DIR, "chrom/{chr}/instance.txt"),
    output:
        pasted_instance_libsvm = os.path.join(TAG_DIR, "chrom/{chr}/pasted_instance.libsvm"),
    shell:
        """paste {input.instance} {input.libsvm} > {output.pasted_instance_libsvm}"""

rule to_libsvm:
    input: 
        index2annot_r2_label = os.path.join(TAG_DIR, "chrom/{chr}/index2annot_r2_label.tsv"),
        variable_txt = os.path.join(ANNOTATION_DIR, "variable.txt"),
        script = os.path.join(SCRIPT_DIR, "tsv2libsvm.py"),
    output:
        libsvm = os.path.join(TAG_DIR, "chrom/{chr}/annotation.libsvm"),
        instance = os.path.join(TAG_DIR, "chrom/{chr}/instance.txt"),
    shell:
        """{PYTHONBIN} {input.script} {input.index2annot_r2_label} {input.variable_txt} {output.instance} {output.libsvm}"""

rule sort_label:
    input:
        index2annot_r2_nonunique_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2annot_r2_nonunique.tsv")
    output:
        index2annot_r2_label = os.path.join(TAG_DIR, "chrom/{chr}/index2annot_r2_label.tsv")
    params:
        label = LABEL
    threads: THREADS
    shell:
        """sort --parallel {threads} -u {input.index2annot_r2_nonunique_tsv} -o {input.index2annot_r2_nonunique_tsv}
        LC_ALL=C sort -k3,3nr --parallel {threads} {input.index2annot_r2_nonunique_tsv} |awk '{{if(!seen[$1,$2]++)print $1"\t"$2"\t"$3"\t{params.label}"}}' > {output.index2annot_r2_label}"""


rule index2annot_r2_nonunique_tsv:
    input:
        index2corr_r2_sortedk2 = os.path.join(TAG_DIR, "chrom/{chr}/index2corr_r2_sortedk2.tsv"),
        annotated_tsv = os.path.join(GENOME1K_PEAKBED_DIR, "{chr}/%s/intersect.tsv"%ANNOT_LABEL),
    output:
        index2annot_r2_nonunique_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2annot_r2_nonunique.tsv")
    shell:
        """LC_ALL=C join -1 2 -2 1  {input.index2corr_r2_sortedk2} {input.annotated_tsv} |awk '{{print $1"\t"$4"\t"$3}}' >{output.index2annot_r2_nonunique_tsv}"""

rule sort_index2corr:
    input:
        index2corr_r2 = os.path.join(TAG_DIR, "chrom/{chr}/index2corr_r2.tsv")
    output:
        index2corr_r2_sortedk2 = os.path.join(TAG_DIR, "chrom/{chr}/index2corr_r2_sortedk2.tsv")
    threads: THREADS
    shell:
        """sort -k3,3nr --parallel {threads} {input.index2corr_r2} -o {output.index2corr_r2_sortedk2};
            sort -u -k2,2 -k1,1 --parallel {threads} {output.index2corr_r2_sortedk2} -o {output.index2corr_r2_sortedk2}"""

rule index2tag2corr_r2_tsv2:
    input:
        index2tagcorr_sortedk2_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2tagcorr_sortedk2.tsv"),
        indexld_sortedk2 = os.path.join(INDEX_DIR, "chrom/{chr}/index_ld_sortedk2.tsv"),
    output:
        index2corr_r2 = os.path.join(TAG_DIR, "chrom/{chr}/index2corr_r2.tsv")
    shell:
        """join -1 2 -2 2 -o1.1,1.2,2.1,2.2,2.3 {input.index2tagcorr_sortedk2_tsv} {input.indexld_sortedk2} |awk '{{if($1==$3) print $1,$2,$5}}' >{output.index2corr_r2}"""

rule sortk2_index2tagcorr_r2:
    input:
        index2tagcorr_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2tagcorr.tsv")
    output:
        index2tagcorr_sortedk2_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2tagcorr_sortedk2.tsv")
    threads: THREADS
    shell:
        """sort --parallel {threads} -u -k2,2 -k1,1 {input.index2tagcorr_tsv} -o {output.index2tagcorr_sortedk2_tsv}"""

rule index2tagcorr_r2:
    input:
        indexld_sortedk2 = os.path.join(INDEX_DIR, "chrom/{chr}/index_ld_sortedk2.tsv"),
        tagld_sortedk1 = os.path.join(TAG_DIR, "chrom/{chr}/tag_ld_sortedk1.tsv"),
    output:
        index2tagcorr_tsv = os.path.join(TAG_DIR, "chrom/{chr}/index2tagcorr.tsv")
    shell:
        """LC_ALL=C join -1 2 -2 1 -o 1.1,2.2 {input.indexld_sortedk2} {input.tagld_sortedk1} > {output.index2tagcorr_tsv}"""

rule sort_tagld_k1:
    input:
        tagld = os.path.join(TAG_DIR, "chrom/{chr}/tag_ld.tsv"),
    output:
        tagld_sortedk1 = os.path.join(TAG_DIR, "chrom/{chr}/tag_ld_sortedk1.tsv"),
    threads: THREADS
    shell:
        """LC_ALL=C sort -u --parallel {threads} {input.tagld} -o {output.tagld_sortedk1}"""

rule tagld:
    input:
        tag_rsid_sorted = os.path.join(TAG_DIR, "%s.sorted.rsid"%TAG_RSID),
        plink_ld = os.path.join(LD_DIR, "chrom/{chr}/chr{chr}.ld"),
    output:
        tagld = os.path.join(TAG_DIR, "chrom/{chr}/tag_ld.tsv"),
    shell:
        """LC_ALL=C join -1 1 -2 1 -o 2.1,2.2,2.3 {input.tag_rsid_sorted} {input.plink_ld} >{output.tagld}"""

rule sort_tag_rsid:
    input:
        tag_rsid = TAG_RSID,
    output:
        tag_rsid_sorted = os.path.join(TAG_DIR, "%s.sorted.rsid"%TAG_RSID),
    threads: THREADS
    shell:
        """LC_ALL=C sort --parallel {threads} -u {input.tag_rsid} -o {output.tag_rsid_sorted}"""

